version: '3.7'

# NOTE: If you're selfhosting, you'll find it much easier (and more performant) to use the proper selfhosted
# dockerfile that exists here: https://github.com/julianpoy/recipesage-selfhost

services:
  proxy:
    image: nginx
    volumes:
    - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    - ./nginx/ssl.crt:/tmp/ssl.crt
    - ./nginx/ssl.key:/tmp/ssl.key
    ports:
    - "80:80"
    - "443:443"
    command: nginx -g 'daemon off;'
    depends_on:
      - webapp
      - express
      - pushpin
  webapp:
    ports:
      - "8100:8100"
    build:
      context: .
      dockerfile: ./packages/frontend/Dockerfile
    volumes:
      - ./packages/frontend/src:/app/packages/frontend/src
      - ./packages/util/src:/app/packages/util/src
  express:
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - elasticsearch
      - pushpin
      - browserless
    build:
      context: .
      dockerfile: ./packages/backend/Dockerfile
    command: npx --yes tsx watch packages/backend/src/bin/www.js
    environment:
      - AWS_REGION=us-west-2
      - AWS_BUCKET=chefbook-dev
      - FIRESTORE_BUCKET=
      - STORAGE_TYPE=S3 #POSSIBLE VALUES: S3, FIREBASE
      - AWS_PUBLIC_ASSET_LOCATION=https://chefbook-dev.s3.us-west-2.amazonaws.com/
      - NODE_ENV=development
      - VERBOSE=false
      - VERSION=development
      - POSTGRES_DB=recipesage_dev
      - POSTGRES_USER=recipesage_dev
      - POSTGRES_PASSWORD=recipesage_dev
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=postgres
      - POSTGRES_SSL=false
      - POSTGRES_LOGGING=true
      - GCM_KEYPAIR
      - SENTRY_DSN
      - SENTRY_SAMPLE_RATE=0
      - GRIP_URL=http://pushpin:5561/
      - GRIP_KEY=changeme
      - ELASTIC_ENABLE=true
      - ELASTIC_IDX_PREFIX=rs_dev_
      - ELASTIC_CONN=http://elastic:recipesage_dev@elasticsearch:9200
      - ELASTIC_PASSWORD=recipesage_dev
      - BROWSERLESS_HOST=browserless
      - BROWSERLESS_PORT=3000
      - INGREDIENT_INSTRUCTION_CLASSIFIER_URL=http://ingredient-instruction-classifier:3000/
    env_file:
      - ./.secrets.env
    volumes:
      - ./packages/backend/src:/app/packages/backend/src
      - ./packages/util/src:/app/packages/util/src
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=recipesage_dev
      - "ES_JAVA_OPTS=-Xms1500m -Xmx1500m"
      - xpack.security.enabled=false
    ports:
      - 9200:9200
  kibana:
    image: kibana:8.4.3
    ports:
      - 5601:5601
  pushpin:
    image: fanout/pushpin:1.27.0
    environment:
      - target=express:3000
    ports:
      - "7999:7999"
      - "5560-5563:5560-5563"
  postgres:
    image: postgres
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=recipesage_dev
      - POSTGRES_USER=recipesage_dev
      - POSTGRES_PASSWORD=recipesage_dev
  browserless:
    image: browserless/chrome:1.53.0-chrome-stable
    environment:
      - MAX_CONCURRENT_SESSIONS=3
      - MAX_QUEUE_LENGTH=10
      - DEFAULT_BLOCK_ADS=true
      - DEFAULT_LAUNCH_ARGS=["--disable-web-security"]
      - WORKSPACE_DELETE_EXPIRED=true
      - WORKSPACE_EXPIRE_DAYS=1
      - EXIT_ON_HEALTH_FAILURE=true
      - PREBOOT_CHROME=true
      - KEEP_ALIVE=true
      - FUNCTION_ENABLE_INCOGNITO_MODE=true
  ingredient-instruction-classifier:
    image: julianpoy/ingredient-instruction-classifier:latest
  pgsync_redis:
    image: redis
  pgsync:
    image: julianpoy/pgsync:2.5.0
    volumes:
      - ./pgsync.schema.json:/schema.json
    environment:
      - PG_DATABASE=recipesage_dev
      - PG_USER=recipesage_dev
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_PASSWORD=recipesage_dev
      - LOG_LEVEL=INFO
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_SCHEME=http
      - ELASTICSEARCH_HOST=elasticsearch
      - REDIS_HOST=pgsync_redis
      - REDIS_PORT=6379
      - ELASTICSEARCH=true
      - OPENSEARCH=false
    depends_on:
      - postgres
      - pgsync_redis
      - elasticsearch

