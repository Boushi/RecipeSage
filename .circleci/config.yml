version: 2
jobs:
  test_backend:
    working_directory: ~/recipesage
    docker:
      - image: circleci/node:10.16.3
        environment:
          RS_TEST_DB_USERNAME: chefbook
          RS_TEST_DB_PASSWORD: admin
          RS_TEST_DB_DATABASE: chefbook_test
      - image: postgres:9.6.9
        environment:
          POSTGRES_USER: chefbook
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: chefbook_test
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: install-deps
          command: 'sudo npm install -g sequelize'
      # -------------- Setup SharedUtils -----------------
      - restore_cache:
          key: sharedutils-dependency-cache-{{ checksum "SharedUtils/package.json" }}
      - run:
          name: install-npm-sharedutils
          command: 'cd SharedUtils && npm install'
      - save_cache:
          key: sharedutils-dependency-cache-{{ checksum "SharedUtils/package.json" }}
          paths:
            - ./SharedUtils/node_modules
      # -------------- Setup Backend -----------------
      - restore_cache:
          key: backend-dependency-cache-{{ checksum "Backend/package.json" }}
      - run:
          name: install-npm-backend
          command: 'cd Backend && npm install'
      - save_cache:
          key: backend-dependency-cache-{{ checksum "Backend/package.json" }}
          paths:
            - ./Backend/node_modules
      - run:
          name: extract-firebase-credentials
          command: cd Backend/config && unzip -j -P $credentialskey firebase-credentials.json.zip
      - run:
          name: extract-config
          command: cd Backend/config && unzip -j -P $credentialskey config.json.zip
      # -------------- Tests -----------------
      - run: # run backend tests
          name: test-backend
          command: cd Backend && npm run test:ci
  build_frontend:
    working_directory: ~/recipesage # directory where steps will run
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      # -------------- Setup SharedUtils -----------------
      - restore_cache:
          key: sharedutils-dependency-cache-{{ checksum "SharedUtils/package.json" }}
      - run:
          name: install-npm-sharedutils
          command: 'cd SharedUtils && npm install'
      - save_cache:
          key: sharedutils-dependency-cache-{{ checksum "SharedUtils/package.json" }}
          paths:
            - ./SharedUtils/node_modules
      # -------------- Setup Frontend -----------------
      - restore_cache:
          key: frontend-dependency-cache-{{ checksum "Frontend/package.json" }}
      - run:
          name: install-npm-frontend
          command: 'cd Frontend && npm install'
      - save_cache:
          key: frontend-dependency-cache-{{ checksum "Frontend/package.json" }}
          paths:
            - ./Frontend/node_modules
      # -------------- Tests -----------------
      - run: # lint frontend
          name: lint-frontend
          command: cd Frontend && npm run lint
      - run: # build frontend
          name: build-frontend
          command: cd Frontend && ionic build --prod
workflows:
  version: 2
  build_and_test:
    jobs:
      - test_backend
      - build_frontend
